version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: afritable-postgres
    environment:
      POSTGRES_DB: afritable
      POSTGRES_USER: afritable_user
      POSTGRES_PASSWORD: afritable_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - afritable-network
    restart: unless-stopped

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: afritable-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - afritable-network
    restart: unless-stopped

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: afritable-backend
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://afritable_user:afritable_password@postgres:5432/afritable
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      JWT_EXPIRES_IN: 7d
      PORT: 3001
      FRONTEND_URL: http://localhost:3000
    ports:
      - "3001:3001"
    depends_on:
      - postgres
      - redis
    volumes:
      - ./backend/logs:/app/logs
    networks:
      - afritable-network
    restart: unless-stopped
    command: >
      sh -c "
        npx prisma generate &&
        npx prisma db push &&
        npm run seed &&
        npm start
      "

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: afritable-frontend
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:3001/api
      NEXT_PUBLIC_APP_NAME: Afritable
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - afritable-network
    restart: unless-stopped

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: afritable-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - afritable-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  afritable-network:
    driver: bridge
